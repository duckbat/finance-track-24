type User {
    user_id: ID!
    username: String!
    email: String!
    level_name: String!
    password: String!
}

type UserResponse {
    user: User!
    message: String!
}

type LoginResponse {
    user: User!
    token: String!
    message: String!
}

type Query {
    users: [User!]!
    user(user_id: ID!): User
}

input UserInput {
    username: String! @constraint(minLength: 3, maxLength: 30)
    email: String! @constraint(format: "email")
    password: String! @constraint(pattern; "^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$")
}

type Mutation {
   createUser(user: UserInput!): UserResponse!
   login(username: String!, password: String!): LoginResponse!
}